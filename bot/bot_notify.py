# bot_notify.py
import asyncio
import logging
import os
from aiogram import Bot
from aiohttp import ClientTimeout
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv("token")
ADMIN_ID = int(os.getenv("ADMIN_ID", "5199401134"))

logging.basicConfig(level=logging.INFO)
timeout = ClientTimeout(total=60)
bot = Bot(token=TOKEN, timeout=timeout)


def send_car_notification_sync(car_data: dict):
    """
    –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    –°–æ–∑–¥–∞—ë—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π event loop –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤—ã–∑–æ–≤–∞.
    """
    async def _send():
        text = (
            f"üöó –ù–æ–≤—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –¥–æ–±–∞–≤–ª–µ–Ω!\n\n"
            f"üë§ –í–ª–∞–¥–µ–ª–µ—Ü: {car_data.get('owner', '–ê–Ω–æ–Ω–∏–º')}\n"
            f"üè∑Ô∏è –ë—Ä–µ–Ω–¥: {car_data.get('brand')}\n"
            f"üöò –ú–æ–¥–µ–ª—å: {car_data.get('model')}\n"
            f"üî¢ –ù–æ–º–µ—Ä: {car_data.get('number')}\n"
            f"üìÖ –î–∞—Ç–∞: {car_data.get('date')}\n"
            f"‚öôÔ∏è –ö–ü–ü: {car_data.get('carabka_transfer')}\n"
            f"üöó –¢–∏–ø: {car_data.get('type_car')}\n"
            f"üìç –ü—Ä–æ–±–µ–≥: {car_data.get('probeg')}\n"
        )
        try:
            await bot.send_message(ADMIN_ID, text)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
        finally:
            await bot.session.close()

    # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π loop –¥–ª—è –∫–∞–∂–¥–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    loop.run_until_complete(_send())
    loop.close()
